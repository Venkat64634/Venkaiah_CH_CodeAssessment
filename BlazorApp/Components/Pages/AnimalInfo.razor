@page "/animalInfo"
@rendermode InteractiveServer
@inject HttpClient httpClient

<h3>Animal Info</h3>

<NavLink class="nav-link btn btn-default" href="/newanimalinfo">Add New Animal</NavLink>

<hr />

@if (_animals.Any())
{
    <div class="card-deck">
        @foreach (var animal in _animals)
        {
            <div class="card">
                <div class="card-body">
                    @* <h5 class="card-title"><strong>Animal @animal.Id</strong></h5> *@
                    <p class="card-text">
                        <strong>Id:</strong> @animal.Id
                    </p>
                    <p class="card-text">
                        <strong>Name:</strong> @animal.Name
                    </p>
                    <p class="card-text">
                        <strong>Age:</strong> @animal.Age
                    </p>
                </div>
            </div>
        }
    </div>

}
else
{
    <p>No Animals Found</p>
}

@code {

    private List<Entities.AnimalInfo> _animals = new List<Entities.AnimalInfo>();

    protected override async Task OnInitializedAsync()
    {
        var httpRequestMessage = new HttpRequestMessage()
            {
                Method = new HttpMethod("GET"),
                RequestUri = new Uri("https://localhost:7295/api/Animal/GetAllAnimals"),
            };

        _animals = await httpClient.GetFromJsonAsync<List<Entities.AnimalInfo>>(httpRequestMessage.RequestUri);
        //var ss = _animals;
    }
}
